<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lte.admin.mapper.custom.CustomerDiscountHoldMapper" >
  <resultMap id="BaseResultMap" type="com.lte.admin.custom.entity.CustomerDiscountHold" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="discount" property="discount" jdbcType="BIGINT" />
    <result column="customer" property="customer" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_by, create_time, discount, customer,order_no,state
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from customer_discount_hold
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="getOneDetail" resultType="java.util.Map" parameterType="java.lang.Long" >
select
hold.*,discount.discount_money,discount.minimum_consumption,discount.validtime
from customer_discount_hold hold
INNER JOIN customer_discount discount on discount.id=hold.discount
where hold.id = #{id,jdbcType=BIGINT}
  </select>

  <select id="getByOrderNo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from customer_discount_hold
    where order_no = #{orderNo,jdbcType=VARCHAR}
  </select>

  <select id="getAllList" resultType="java.util.Map" parameterType="java.util.Map" >
    select
    cdh.create_time,cd.discount_number, cd.discount_info, cd.validtime,c.name
    from customer_discount_hold cdh left join customer_discount cd on cdh.discount = cd.id left join customer c on cdh.customer = c.id
    <trim prefix="where" prefixOverrides="and | or">
      <if test="name != null" >
        and c.name  LIKE CONCAT(CONCAT('%', #{name}), '%')
      </if>
    </trim>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from customer_discount_hold
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lte.admin.custom.entity.CustomerDiscountHold" >
    insert into customer_discount_hold (id, create_by, create_time, 
      discount, customer,order_no,state)
    values (#{id,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{discount,jdbcType=BIGINT}, #{customer,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR},
       #{state,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lte.admin.custom.entity.CustomerDiscountHold" >
    insert into customer_discount_hold
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="discount != null" >
        discount,
      </if>
      <if test="customer != null" >
        customer,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="state != null" >
        state
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="discount != null" >
        #{discount,jdbcType=BIGINT},
      </if>
      <if test="customer != null" >
        #{customer,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lte.admin.custom.entity.CustomerDiscountHold" >
    update customer_discount_hold
    <set >
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="discount != null" >
        discount = #{discount,jdbcType=BIGINT},
      </if>
      <if test="customer != null" >
        customer = #{customer,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER}
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lte.admin.custom.entity.CustomerDiscountHold" >
    update customer_discount_hold
    set create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      discount = #{discount,jdbcType=BIGINT},
      customer = #{customer,jdbcType=BIGINT},
      order_no = #{orderNo,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getByCusAndDis" parameterType="java.util.Map" resultType="java.lang.Integer">
      select count(*) from customer_discount_hold
      where discount = #{disId,jdbcType=BIGINT}
    and customer = #{cusId,jdbcType=BIGINT}
  </select>
</mapper>