<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lte.admin.mapper.custom.CustomerDrivingLicenceMapper" >
  <resultMap id="BaseResultMap" type="com.lte.admin.custom.entity.CustomerDrivingLicence" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="last_time" property="lastTime" jdbcType="TIMESTAMP" />
    <result column="last_by" property="lastBy" jdbcType="BIGINT" />
    <result column="quasi_driving_type" property="quasiDrivingType" jdbcType="VARCHAR" />
    <result column="get_time" property="getTime" jdbcType="TIMESTAMP" />
    <result column="file_number" property="fileNumber" jdbcType="VARCHAR" />
    <result column="attachment" property="attachment" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_by, create_time, state, last_time, last_by, quasi_driving_type, get_time, 
    file_number, attachment
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from customer_driving_licence
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="getAllList" resultType="java.util.Map" parameterType="java.util.Map" >
    select
    cdl.*,c.name
    from customer_driving_licence cdl left join customer c on cdl.id = c.driving_licence
    <trim prefix="where" prefixOverrides="and | or">
      <if test="name != null" >
        and c.name  LIKE CONCAT(CONCAT('%', #{name}), '%')
      </if>
    </trim>
  </select>

  <select id="getAllList1" resultType="java.util.Map" parameterType="java.util.Map" >
    select
    id,file_number
    from customer_driving_licence
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from customer_driving_licence
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lte.admin.custom.entity.CustomerDrivingLicence" >
    insert into customer_driving_licence (id, create_by, create_time, 
      state, last_time, last_by, 
      quasi_driving_type, get_time, file_number, 
      attachment)
    values (#{id,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{lastTime,jdbcType=TIMESTAMP}, #{lastBy,jdbcType=BIGINT}, 
      #{quasiDrivingType,jdbcType=VARCHAR}, #{getTime,jdbcType=TIMESTAMP}, #{fileNumber,jdbcType=VARCHAR}, 
      #{attachment,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective"  useGeneratedKeys="true" keyProperty="drivingLicenceId" parameterType="com.lte.admin.custom.entity.CustomerDrivingLicence" >
    insert into customer_driving_licence
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="lastTime != null" >
        last_time,
      </if>
      <if test="lastBy != null" >
        last_by,
      </if>
      <if test="quasiDrivingType != null" >
        quasi_driving_type,
      </if>
      <if test="getTime != null" >
        get_time,
      </if>
      <if test="fileNumber != null" >
        file_number,
      </if>
      <if test="attachment != null" >
        attachment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="lastTime != null" >
        #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastBy != null" >
        #{lastBy,jdbcType=BIGINT},
      </if>
      <if test="quasiDrivingType != null" >
        #{quasiDrivingType,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null" >
        #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileNumber != null" >
        #{fileNumber,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null" >
        #{attachment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lte.admin.custom.entity.CustomerDrivingLicence" >
    update customer_driving_licence
    <set >
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="lastTime != null" >
        last_time = #{lastTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastBy != null" >
        last_by = #{lastBy,jdbcType=BIGINT},
      </if>
      <if test="quasiDrivingType != null" >
        quasi_driving_type = #{quasiDrivingType,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null" >
        get_time = #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileNumber != null" >
        file_number = #{fileNumber,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null" >
        attachment = #{attachment,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lte.admin.custom.entity.CustomerDrivingLicence" >
    update customer_driving_licence
    set create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      last_time = #{lastTime,jdbcType=TIMESTAMP},
      last_by = #{lastBy,jdbcType=BIGINT},
      quasi_driving_type = #{quasiDrivingType,jdbcType=VARCHAR},
      get_time = #{getTime,jdbcType=TIMESTAMP},
      file_number = #{fileNumber,jdbcType=VARCHAR},
      attachment = #{attachment,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>