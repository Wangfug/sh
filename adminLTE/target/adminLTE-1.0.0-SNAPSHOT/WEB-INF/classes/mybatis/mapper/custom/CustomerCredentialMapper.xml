<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lte.admin.mapper.custom.CustomerCredentialMapper" >
  <resultMap id="BaseResultMap" type="com.lte.admin.custom.entity.CustomerCredential" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="credential_type" property="credentialType" jdbcType="VARCHAR" />
    <result column="credential_code" property="credentialCode" jdbcType="VARCHAR" />
    <result column="attachment" property="attachment" jdbcType="VARCHAR" />
    <result column="get_time" property="getTime" jdbcType="TIMESTAMP" />
    <result column="front_view" property="frontView" jdbcType="BIGINT" />
    <result column="back_view" property="backView" jdbcType="BIGINT" />
    <result column="customer" property="customer" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_by, create_time, state, credential_type, credential_code, attachment, 
    get_time, front_view, back_view,customer
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from customer_credential
    where id = #{id,jdbcType=BIGINT}
  </select>
<!-- 根据证件吗 查询证件唯一记录-->
  <select id="getByCode" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from customer_credential
    where credential_code = #{credentialcode,jdbcType=VARCHAR}
  </select>
  <select id="getAllList" resultType="java.util.Map" parameterType="java.util.Map" >
    select
    cc.*,c.name
    from customer_credential cc left join customer c on cc.customer = c.id
    <trim prefix="where" prefixOverrides="and | or">
      <if test="name != null" >
        and c.name  LIKE CONCAT(CONCAT('%', #{name}), '%')
      </if>
    </trim>
  </select>
  <select id="getAllList1" resultType="java.util.Map" parameterType="java.util.Map" >
    select
    cc.id,cc.credential_code,dict.name credentialtype
    from customer_credential cc left join t_base_dict_type dict on cc.credential_type = dict.code
    <trim prefix="where" prefixOverrides="and | or">
      <if test="name != null" >
        and c.name  LIKE CONCAT(CONCAT('%', #{name}), '%')
      </if>
    </trim>
  </select>
<!-- 根据证件类型 查找证件集合-->

  <select id="getCredentialsByType" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from customer_credential
    where credential_type = #{type,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from customer_credential
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lte.admin.custom.entity.CustomerCredential" >
    insert into customer_credential (id, create_by, create_time, 
      state, credential_type, credential_code, 
      attachment, get_time, front_view, 
      back_view,customer)
    values (#{id,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=INTEGER}, #{credentialType,jdbcType=VARCHAR}, #{credentialCode,jdbcType=VARCHAR}, 
      #{attachment,jdbcType=VARCHAR}, #{getTime,jdbcType=TIMESTAMP}, #{frontView,jdbcType=BIGINT}, 
      #{backView,jdbcType=BIGINT}),#{customer,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="credentialId"  parameterType="com.lte.admin.custom.entity.CustomerCredential" >
    insert into customer_credential
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="credentialType != null" >
        credential_type,
      </if>
      <if test="credentialCode != null" >
        credential_code,
      </if>
      <if test="attachment != null" >
        attachment,
      </if>
      <if test="getTime != null" >
        get_time,
      </if>
      <if test="frontView != null" >
        front_view,
      </if>
      <if test="backView != null" >
        back_view,
      </if>
      <if test="customer != null" >
        customer
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="credentialType != null" >
        #{credentialType,jdbcType=VARCHAR},
      </if>
      <if test="credentialCode != null" >
        #{credentialCode,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null" >
        #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null" >
        #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="frontView != null" >
        #{frontView,jdbcType=BIGINT},
      </if>
      <if test="backView != null" >
        #{backView,jdbcType=BIGINT},
      </if>
      <if test="customer != null" >
        #{customer,jdbcType=BIGINT}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lte.admin.custom.entity.CustomerCredential" >
    update customer_credential
    <set >
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="credentialType != null" >
        credential_type = #{credentialType,jdbcType=VARCHAR},
      </if>
      <if test="credentialCode != null" >
        credential_code = #{credentialCode,jdbcType=VARCHAR},
      </if>
      <if test="attachment != null" >
        attachment = #{attachment,jdbcType=VARCHAR},
      </if>
      <if test="getTime != null" >
        get_time = #{getTime,jdbcType=TIMESTAMP},
      </if>
      <if test="frontView != null" >
        front_view = #{frontView,jdbcType=BIGINT},
      </if>
      <if test="backView != null" >
        back_view = #{backView,jdbcType=BIGINT},
      </if>
      <if test="customer != null" >
        customer = #{customer,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lte.admin.custom.entity.CustomerCredential" >
    update customer_credential
    set create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      credential_type = #{credentialType,jdbcType=VARCHAR},
      credential_code = #{credentialCode,jdbcType=VARCHAR},
      attachment = #{attachment,jdbcType=VARCHAR},
      get_time = #{getTime,jdbcType=TIMESTAMP},
      front_view = #{frontView,jdbcType=BIGINT},
      back_view = #{backView,jdbcType=BIGINT}
      customer = #{customer,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>