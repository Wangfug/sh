<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lte.admin.mapper.other.exception_throwMapper" >
  <resultMap id="BaseResultMap" type="com.lte.admin.other.entity.ExceptionThrow" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="create_by" property="createBy" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="exception_order" property="exceptionOrder" jdbcType="BIGINT" />
    <result column="handle_by" property="handleBy" jdbcType="VARCHAR" />
    <result column="is_handle" property="isHandle" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, create_by, create_time, exception_order, handle_by, is_handle
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from exception_throw
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="getAllList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    <include refid="Base_Column_List" />
    from exception_throw
    <trim prefix="where" prefixOverrides="and | or">
      <if test="exceptionOrder != null" >
        and exception_order like CONCAT(CONCAT('%', #{exceptionOrder}), '%')
      </if>
      <if test="isHandle != null" >
        and is_handle = #{isHandle,jdbcType=VARCHAR}
      </if>
    </trim>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from exception_throw
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lte.admin.other.entity.ExceptionThrow" >
    insert into exception_throw (id, create_by, create_time, 
      exception_order, handle_by, is_handle
      )
    values (#{id,jdbcType=BIGINT}, #{createBy,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{exceptionOrder,jdbcType=BIGINT}, #{handleBy,jdbcType=VARCHAR}, #{isHandle,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lte.admin.other.entity.ExceptionThrow" >
    insert into exception_throw
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="exceptionOrder != null" >
        exception_order,
      </if>
      <if test="handleBy != null" >
        handle_by,
      </if>
      <if test="isHandle != null" >
        is_handle,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exceptionOrder != null" >
        #{exceptionOrder,jdbcType=BIGINT},
      </if>
      <if test="handleBy != null" >
        #{handleBy,jdbcType=VARCHAR},
      </if>
      <if test="isHandle != null" >
        #{isHandle,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lte.admin.other.entity.ExceptionThrow" >
    update exception_throw
    <set >
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exceptionOrder != null" >
        exception_order = #{exceptionOrder,jdbcType=BIGINT},
      </if>
      <if test="handleBy != null" >
        handle_by = #{handleBy,jdbcType=VARCHAR},
      </if>
      <if test="isHandle != null" >
        is_handle = #{isHandle,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lte.admin.other.entity.ExceptionThrow" >
    update exception_throw
    set create_by = #{createBy,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      exception_order = #{exceptionOrder,jdbcType=BIGINT},
      handle_by = #{handleBy,jdbcType=VARCHAR},
      is_handle = #{isHandle,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>